---

- name: "configure .bashrc"
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      export EDITOR=vim

      # Git branch in the prompt.
      parse_git_branch() {
          local branch=$(git branch 2> /dev/null | grep '^*' | awk '{ print $NF }')
          if [[ -z "${branch}" ]]; then
              echo -e "\U27BD"
          else
              echo -e "\U27BD ${branch}"
          fi
      }
      
      # Prompt set.
      PS1='\[\033[1;38;5;220m\][$?] \[\033[1;38;5;106m\]\u@\h\[\033[00m\]:\[\033[1;38;5;106m\]\W\[\033[00m\] \[\033[1;38;5;244m\]$(parse_git_branch)\[\033[00m\] $ '
    
    insertafter: "EOF"

- name: "configure .bashrc for root"
  become: "yes"
  blockinfile:
    path: "/root/.bashrc"
    block: |
      export EDITOR=vim

      # Git branch in the prompt.
      parse_git_branch() {
          local branch=$(git branch 2> /dev/null | grep '^*' | awk '{ print $NF }')
          if [[ -z "${branch}" ]]; then
              echo -e "\U27BD"
          else
              echo -e "\U27BD ${branch}"
          fi
      }
      
      # Prompt set.
      PS1='\[\033[1;38;5;220m\][$?] \[\033[1;38;5;088m\]\u@\h\[\033[00m\]:\[\033[1;38;5;088m\]\W\[\033[00m\] \[\033[1;38;5;244m\]$(parse_git_branch)\[\033[00m\] # '
    
    insertafter: "EOF"

...
